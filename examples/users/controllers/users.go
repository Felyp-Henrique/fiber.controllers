package controllers

import (
	"Felyp-Henrique/fiber.controllers/controllers"
	"Felyp-Henrique/fiber.controllers/examples/users/datasets"

	"github.com/gofiber/fiber/v2"
)

type UsersController struct {
	controllers.DefaultController
}

func (UsersController) Route() string {
	return "/users"
}

func (UsersController) Get(c *fiber.Ctx) error {
	return c.JSON(datasets.GetAllUsers())
}

func (u UsersController) GetById(c *fiber.Ctx) error {
	id, _ := c.ParamsInt("id")
	if datasets.ExistsUser(id) {
		return c.JSON(datasets.GetById(id))
	} else {
		return c.JSON(u.getNotFoundResponse())
	}
}

func (u UsersController) Post(c *fiber.Ctx) error {
	newUser := datasets.User{}
	c.BodyParser(&newUser)
	newUser = datasets.CreateUser(newUser)
	return c.JSON(newUser)
}

func (u UsersController) PutById(c *fiber.Ctx) error {
	id, _ := c.ParamsInt("id")
	changedUser := datasets.User{}
	c.BodyParser(&changedUser)
	if datasets.ExistsUser(id) {
		changedUser = datasets.UpdateUser(id, changedUser)
		return c.JSON(changedUser)
	} else {
		return c.JSON(u.getNotFoundResponse())
	}
}

func (u UsersController) DeleteById(c *fiber.Ctx) error {
	id, _ := c.ParamsInt("id")
	if datasets.ExistsUser(id) {
		datasets.DeleteUser(id)
		return c.JSON(u.getDeletedResponse())
	} else {
		return c.JSON(u.getNotFoundResponse())
	}
}

func (UsersController) getNotFoundResponse() any {
	return struct {
		Message      string `json:"message"`
		Observations string `json:"observations"`
	}{
		Message:      "Not Found!",
		Observations: "This 'not found' response were generated by a method with 'get' prefix, and it's don't became a path",
	}
}

func (UsersController) getDeletedResponse() any {
	return struct {
		Message      string `json:"message"`
		Observations string `json:"observations"`
	}{
		Message:      "Deleted!",
		Observations: "This 'deleted' response were generated by a method with 'get' prefix, and it's don't became a path",
	}
}
